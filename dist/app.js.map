{"version":3,"sources":["app/document.js","app/sec.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5CA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9CA;AAAA","file":"dist/app.js","sourcesContent":["encode = require('sec.js').encode;\ndecode = require('sec.js').decode;\n\nfunction documentReady(fn) {\n  if (document.attachEvent ? document.readyState === \"complete\" : document.readyState !== \"loading\"){\n    fn();\n  } else {\n    document.addEventListener('DOMContentLoaded', fn);\n  }\n}\n\nfunction warn() {\n\n}\n\nmodule.exports = {\n  ready:  () => {\n    documentReady( function() {\n      const encoded = document.querySelectorAll(\"#encoded\")[0];\n      const encodeButton = document.querySelectorAll(\"#encode\")[0];\n      const decoded = document.querySelectorAll(\"#decoded\")[0];\n      const decodeButton = document.querySelectorAll(\"#decode\")[0];\n      const password = document.querySelectorAll(\"#password\")[0];\n      const warning = document.querySelectorAll(\"#warning\")[0];\n\n      encodeButton.addEventListener('click', (evt) => {\n        encoded.value = encode(decoded.value, password.value);\n        if (password.value.length < decoded.value.length) {\n          warning.style.display = '';\n        } else {\n          warning.style.display = 'none';\n        }\n      });\n      decodeButton.addEventListener('click', (evt) => {\n        decoded.value = decode(encoded.value, password.value);\n        if (password.value.length < encoded.value.length) {\n          warning.style.display = '';\n        } else {\n          warning.style.display = 'none';\n        }\n      });\n    });\n  }\n};\n","const letters = \"abcdefghijklmnopqrstuvwxyz\".split('');\n\nconst clean = (text) => {\n  return text.toLowerCase().replace(/[^a-z\\ ]+/g, \"\");\n}\n\n// convert string into series of numbers\nconst prepare = (text) => {\n  return clean(text).split('').map((x) => {\n    return letters.indexOf(x);\n  });\n}\n\nconst unprepare = (array) => {\n  return array.map((x) => { return index(letters,x) }).join('');\n}\n\nconst index = (array, i) => {\n  if (i < 0) {\n    i += array.length;\n  }\n  return array[i % array.length];\n}\n\nconst encode = function(text, password, decodeText=false) {\n  var passwordIndex = 0;\n  return text.split(\" \").map( (word) => {\n    t = prepare(word);\n    p = prepare(password);\n    encoded = t.map((x) => {\n      var offset = index(p,passwordIndex);\n      if (decodeText) {\n        offset = -offset;\n      }\n      passwordIndex += 1;\n      return x + offset;\n    });\n    return unprepare(encoded);\n  }).join(\" \");\n}\n\nconst decode = function(text, password) {\n  return encode(text, password, true);\n}\n\nmodule.exports = {encode, decode, clean, prepare};\n"]}